// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/mw.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterReq struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Http                 string   `protobuf:"bytes,2,opt,name=http,proto3" json:"http,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReq) Reset()         { *m = RegisterReq{} }
func (m *RegisterReq) String() string { return proto.CompactTextString(m) }
func (*RegisterReq) ProtoMessage()    {}
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cc687f338527ea, []int{0}
}

func (m *RegisterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReq.Unmarshal(m, b)
}
func (m *RegisterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReq.Marshal(b, m, deterministic)
}
func (m *RegisterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReq.Merge(m, src)
}
func (m *RegisterReq) XXX_Size() int {
	return xxx_messageInfo_RegisterReq.Size(m)
}
func (m *RegisterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReq proto.InternalMessageInfo

func (m *RegisterReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RegisterReq) GetHttp() string {
	if m != nil {
		return m.Http
	}
	return ""
}

type RegisterRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRes) Reset()         { *m = RegisterRes{} }
func (m *RegisterRes) String() string { return proto.CompactTextString(m) }
func (*RegisterRes) ProtoMessage()    {}
func (*RegisterRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cc687f338527ea, []int{1}
}

func (m *RegisterRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRes.Unmarshal(m, b)
}
func (m *RegisterRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRes.Marshal(b, m, deterministic)
}
func (m *RegisterRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRes.Merge(m, src)
}
func (m *RegisterRes) XXX_Size() int {
	return xxx_messageInfo_RegisterRes.Size(m)
}
func (m *RegisterRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRes.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRes proto.InternalMessageInfo

func (m *RegisterRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type HCReq struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HCReq) Reset()         { *m = HCReq{} }
func (m *HCReq) String() string { return proto.CompactTextString(m) }
func (*HCReq) ProtoMessage()    {}
func (*HCReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cc687f338527ea, []int{2}
}

func (m *HCReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HCReq.Unmarshal(m, b)
}
func (m *HCReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HCReq.Marshal(b, m, deterministic)
}
func (m *HCReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HCReq.Merge(m, src)
}
func (m *HCReq) XXX_Size() int {
	return xxx_messageInfo_HCReq.Size(m)
}
func (m *HCReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HCReq.DiscardUnknown(m)
}

var xxx_messageInfo_HCReq proto.InternalMessageInfo

func (m *HCReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type HCRes struct {
	Uuid                 string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HCRes) Reset()         { *m = HCRes{} }
func (m *HCRes) String() string { return proto.CompactTextString(m) }
func (*HCRes) ProtoMessage()    {}
func (*HCRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cc687f338527ea, []int{3}
}

func (m *HCRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HCRes.Unmarshal(m, b)
}
func (m *HCRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HCRes.Marshal(b, m, deterministic)
}
func (m *HCRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HCRes.Merge(m, src)
}
func (m *HCRes) XXX_Size() int {
	return xxx_messageInfo_HCRes.Size(m)
}
func (m *HCRes) XXX_DiscardUnknown() {
	xxx_messageInfo_HCRes.DiscardUnknown(m)
}

var xxx_messageInfo_HCRes proto.InternalMessageInfo

func (m *HCRes) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *HCRes) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterReq)(nil), "protos.RegisterReq")
	proto.RegisterType((*RegisterRes)(nil), "protos.RegisterRes")
	proto.RegisterType((*HCReq)(nil), "protos.HCReq")
	proto.RegisterType((*HCRes)(nil), "protos.HCRes")
}

func init() { proto.RegisterFile("protos/mw.proto", fileDescriptor_f0cc687f338527ea) }

var fileDescriptor_f0cc687f338527ea = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0xcf, 0x2d, 0xd7, 0x03, 0xb3, 0x84, 0xd8, 0x20, 0x02, 0x52, 0xf2, 0xe9, 0xf9,
	0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x60, 0x6e, 0x52, 0x69, 0x9a, 0x7e, 0x49, 0x66, 0x6e, 0x6a, 0x71,
	0x49, 0x62, 0x6e, 0x01, 0x44, 0xa1, 0x92, 0x29, 0x17, 0x77, 0x50, 0x6a, 0x7a, 0x66, 0x71, 0x49,
	0x6a, 0x51, 0x50, 0x6a, 0xa1, 0x90, 0x10, 0x17, 0x4b, 0x69, 0x69, 0x66, 0x8a, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x98, 0x0d, 0x12, 0xcb, 0x28, 0x29, 0x29, 0x90, 0x60, 0x82, 0x88, 0x81,
	0xd8, 0x4a, 0xb2, 0xc8, 0xda, 0x8a, 0x85, 0xf8, 0xb8, 0x98, 0xf2, 0xb3, 0xc1, 0x9a, 0x38, 0x82,
	0x98, 0xf2, 0xb3, 0x95, 0xa4, 0xb9, 0x58, 0x3d, 0x9c, 0x71, 0x98, 0xa7, 0xe4, 0x0d, 0x91, 0x2c,
	0xc6, 0x6a, 0x99, 0x1e, 0x17, 0x0b, 0xc8, 0x89, 0x60, 0xcb, 0xb8, 0x8d, 0xa4, 0xf4, 0x20, 0xee,
	0xd7, 0x83, 0xb9, 0x5f, 0x2f, 0x04, 0xe6, 0xfe, 0x20, 0xb0, 0x3a, 0x27, 0xce, 0x28, 0x76, 0x88,
	0xe7, 0x8a, 0x93, 0x20, 0x7e, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xaf, 0x88, 0xb0,
	0x0d, 0x01, 0x00, 0x00,
}
